{"ast":null,"code":"import axios from \"axios\";\nimport { create } from \"zustand\";\nexport const showStore = create(set => ({\n  graphData: [],\n  fetchData: async id => {\n    const [graphRes, dataRes] = await Promise.all([axios.get(`https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=usd&days=121`), axios.get(`https://api.coingecko.com/api/v3/coins/${id}?localization=false&market_data=true`)]);\n    const graphData = graphRes.data.prices.map(price => {\n      const [timestamp, p] = price;\n      const date = new Date(timestamp).toLocaleDateString(\"en-us\");\n      return {\n        Date: date,\n        Price: p\n      };\n    });\n    console.log(dataRes.data);\n    const {\n      name,\n      symbol,\n      image,\n      market_data,\n      market_Cap_rank\n    } = dataRes.data;\n    const imageLarge = image.large;\n    const high24h = market_data.high_24h.usd;\n    const low24h = market_data.low_24h.usd;\n    const circulatingSupply = market_data.circulating_supply;\n    const currentPrice = market_data.current_price.usd;\n    const priceChangePercentage = market_data.price_change_percentage_1y.toFixed(2);\n    set({\n      graphData,\n      name,\n      symbol,\n      imageLarge,\n      high24h,\n      market_Cap_rank,\n      low24h,\n      circulatingSupply,\n      currentPrice,\n      priceChangePercentage\n    });\n  }\n}));\nexport default showStore;","map":{"version":3,"names":["axios","create","showStore","set","graphData","fetchData","id","graphRes","dataRes","Promise","all","get","data","prices","map","price","timestamp","p","date","Date","toLocaleDateString","Price","console","log","name","symbol","image","market_data","market_Cap_rank","imageLarge","large","high24h","high_24h","usd","low24h","low_24h","circulatingSupply","circulating_supply","currentPrice","current_price","priceChangePercentage","price_change_percentage_1y","toFixed"],"sources":["/workspaces/coingecko-reactjs/src/Store/showStore.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { create } from \"zustand\";\r\n\r\nexport const showStore = create((set) => ({\r\n  graphData: [],\r\n\r\n  fetchData: async (id) => {\r\n    const [graphRes, dataRes] = await Promise.all([\r\n      axios.get(\r\n        `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=usd&days=121`\r\n      ),\r\n      axios.get(\r\n        `https://api.coingecko.com/api/v3/coins/${id}?localization=false&market_data=true`\r\n      ),\r\n    ]);\r\n\r\n    const graphData = graphRes.data.prices.map((price) => {\r\n      const [timestamp, p] = price;\r\n      const date = new Date(timestamp).toLocaleDateString(\"en-us\");\r\n      return {\r\n        Date: date,\r\n        Price: p,\r\n      };\r\n    });\r\n\r\n    console.log(dataRes.data);\r\n    const { name, symbol, image, market_data, market_Cap_rank } = dataRes.data;\r\n    const imageLarge = image.large;\r\n    const high24h = market_data.high_24h.usd;\r\n    const low24h = market_data.low_24h.usd;\r\n    const circulatingSupply = market_data.circulating_supply;\r\n    const currentPrice = market_data.current_price.usd;\r\n    const priceChangePercentage =\r\n      market_data.price_change_percentage_1y.toFixed(2);\r\n\r\n    set({\r\n      graphData,\r\n      name,\r\n      symbol,\r\n      imageLarge,\r\n      high24h,\r\n      market_Cap_rank,\r\n      low24h,\r\n      circulatingSupply,\r\n      currentPrice,\r\n      priceChangePercentage,\r\n    });\r\n  },\r\n}));\r\n\r\nexport default showStore;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,SAAS;AAEhC,OAAO,MAAMC,SAAS,GAAGD,MAAM,CAAEE,GAAG,KAAM;EACxCC,SAAS,EAAE,EAAE;EAEbC,SAAS,EAAE,MAAOC,EAAE,IAAK;IACvB,MAAM,CAACC,QAAQ,EAAEC,OAAO,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC5CV,KAAK,CAACW,GAAG,CACN,0CAAyCL,EAAG,wCAAuC,CACrF,EACDN,KAAK,CAACW,GAAG,CACN,0CAAyCL,EAAG,sCAAqC,CACnF,CACF,CAAC;IAEF,MAAMF,SAAS,GAAGG,QAAQ,CAACK,IAAI,CAACC,MAAM,CAACC,GAAG,CAAEC,KAAK,IAAK;MACpD,MAAM,CAACC,SAAS,EAAEC,CAAC,CAAC,GAAGF,KAAK;MAC5B,MAAMG,IAAI,GAAG,IAAIC,IAAI,CAACH,SAAS,CAAC,CAACI,kBAAkB,CAAC,OAAO,CAAC;MAC5D,OAAO;QACLD,IAAI,EAAED,IAAI;QACVG,KAAK,EAAEJ;MACT,CAAC;IACH,CAAC,CAAC;IAEFK,OAAO,CAACC,GAAG,CAACf,OAAO,CAACI,IAAI,CAAC;IACzB,MAAM;MAAEY,IAAI;MAAEC,MAAM;MAAEC,KAAK;MAAEC,WAAW;MAAEC;IAAgB,CAAC,GAAGpB,OAAO,CAACI,IAAI;IAC1E,MAAMiB,UAAU,GAAGH,KAAK,CAACI,KAAK;IAC9B,MAAMC,OAAO,GAAGJ,WAAW,CAACK,QAAQ,CAACC,GAAG;IACxC,MAAMC,MAAM,GAAGP,WAAW,CAACQ,OAAO,CAACF,GAAG;IACtC,MAAMG,iBAAiB,GAAGT,WAAW,CAACU,kBAAkB;IACxD,MAAMC,YAAY,GAAGX,WAAW,CAACY,aAAa,CAACN,GAAG;IAClD,MAAMO,qBAAqB,GACzBb,WAAW,CAACc,0BAA0B,CAACC,OAAO,CAAC,CAAC,CAAC;IAEnDvC,GAAG,CAAC;MACFC,SAAS;MACToB,IAAI;MACJC,MAAM;MACNI,UAAU;MACVE,OAAO;MACPH,eAAe;MACfM,MAAM;MACNE,iBAAiB;MACjBE,YAAY;MACZE;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC,CAAC;AAEH,eAAetC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}