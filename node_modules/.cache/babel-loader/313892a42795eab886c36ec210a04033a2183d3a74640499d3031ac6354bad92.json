{"ast":null,"code":"import _slicedToArray from\"/workspaces/coingecko-reactjs/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/workspaces/coingecko-reactjs/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/workspaces/coingecko-reactjs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from\"axios\";import{create}from\"zustand\";import{Debounce}from\"../Helpers/Debounc\";export var homeStore=create(function(set){return{coins:[],trending:[],query:\"\",setQuery:function setQuery(e){set({query:e.target.value});homeStore.getState().searchCoins();},searchCoins:Debounce(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _homeStore$getState,query,trending,res,coins;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_homeStore$getState=homeStore.getState(),query=_homeStore$getState.query,trending=_homeStore$getState.trending;if(!(query.length>2)){_context.next=9;break;}_context.next=4;return axios.get(\"https://api.coingecko.com/api/v3/search?query=\".concat(query));case 4:res=_context.sent;coins=res.data.coins.map(function(coins){return{name:coins.name,image:coins.large,id:coins.id};});set({coins:coins});_context.next=10;break;case 9:set({coins:trending});case 10:case\"end\":return _context.stop();}},_callee);})),500),fetchCoins:function(){var _fetchCoins=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _yield$Promise$all,_yield$Promise$all2,res,btcRes,btcPrice,coins;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Promise.all([axios.get(\"https://api.coingecko.com/api/v3/search/trending\"),axios.get(\"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\")]);case 2:_yield$Promise$all=_context2.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);res=_yield$Promise$all2[0];btcRes=_yield$Promise$all2[1];btcPrice=btcRes.data.bitcoin.usd;coins=res.data.coins.map(function(coins){return{name:coins.item.name,image:coins.item.large,id:coins.item.id,priceBtc:coins.item.price_btc.toFixed(10),priceUsd:(coins.item.price_btc*btcPrice).toFixed(10)};});set({coins:coins,trending:coins});case 9:case\"end\":return _context2.stop();}},_callee2);}));function fetchCoins(){return _fetchCoins.apply(this,arguments);}return fetchCoins;}()};});","map":{"version":3,"names":["axios","create","Debounce","homeStore","set","coins","trending","query","setQuery","e","target","value","getState","searchCoins","length","get","res","data","map","name","image","large","id","fetchCoins","Promise","all","btcRes","btcPrice","bitcoin","usd","item","priceBtc","price_btc","toFixed","priceUsd"],"sources":["/workspaces/coingecko-reactjs/src/Store/homeStore.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { create } from \"zustand\";\r\nimport { Debounce } from \"../Helpers/Debounc\";\r\n\r\nexport const homeStore = create((set) => ({\r\n  coins: [],\r\n  trending: [],\r\n  query: \"\",\r\n\r\n  setQuery: (e) => {\r\n    set({ query: e.target.value });\r\n    homeStore.getState().searchCoins();\r\n  },\r\n\r\n  searchCoins: Debounce(async () => {\r\n    const { query, trending } = homeStore.getState();\r\n    if (query.length > 2) {\r\n      const res = await axios.get(\r\n        `https://api.coingecko.com/api/v3/search?query=${query}`\r\n      );\r\n      const coins = res.data.coins.map((coins) => {\r\n        return {\r\n          name: coins.name,\r\n          image: coins.large,\r\n          id: coins.id,\r\n        };\r\n      });\r\n      set({ coins });\r\n    } else {\r\n      set({ coins: trending });\r\n    }\r\n  }, 500),\r\n\r\n  fetchCoins: async () => {\r\n    const [res, btcRes] = await Promise.all([\r\n      axios.get(`https://api.coingecko.com/api/v3/search/trending`),\r\n      axios.get(\r\n        `https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd`\r\n      ),\r\n    ]);\r\n\r\n    const btcPrice = btcRes.data.bitcoin.usd;\r\n\r\n    const coins = res.data.coins.map((coins) => {\r\n      return {\r\n        name: coins.item.name,\r\n        image: coins.item.large,\r\n        id: coins.item.id,\r\n        priceBtc: coins.item.price_btc.toFixed(10),\r\n        priceUsd: (coins.item.price_btc * btcPrice).toFixed(10),\r\n      };\r\n    });\r\n\r\n    set({ coins, trending: coins });\r\n  },\r\n}));\r\n"],"mappings":"yWAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,SAAS,CAChC,OAASC,QAAQ,KAAQ,oBAAoB,CAE7C,MAAO,IAAMC,UAAS,CAAGF,MAAM,CAAC,SAACG,GAAG,QAAM,CACxCC,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EAAE,CAETC,QAAQ,CAAE,kBAACC,CAAC,CAAK,CACfL,GAAG,CAAC,CAAEG,KAAK,CAAEE,CAAC,CAACC,MAAM,CAACC,KAAM,CAAC,CAAC,CAC9BR,SAAS,CAACS,QAAQ,EAAE,CAACC,WAAW,EAAE,CACpC,CAAC,CAEDA,WAAW,CAAEX,QAAQ,wEAAC,yMACQC,SAAS,CAACS,QAAQ,EAAE,CAAxCL,KAAK,qBAALA,KAAK,CAAED,QAAQ,qBAARA,QAAQ,MACnBC,KAAK,CAACO,MAAM,CAAG,CAAC,gDACAd,MAAK,CAACe,GAAG,yDACwBR,KAAK,EACvD,QAFKS,GAAG,eAGHX,KAAK,CAAGW,GAAG,CAACC,IAAI,CAACZ,KAAK,CAACa,GAAG,CAAC,SAACb,KAAK,CAAK,CAC1C,MAAO,CACLc,IAAI,CAAEd,KAAK,CAACc,IAAI,CAChBC,KAAK,CAAEf,KAAK,CAACgB,KAAK,CAClBC,EAAE,CAAEjB,KAAK,CAACiB,EACZ,CAAC,CACH,CAAC,CAAC,CACFlB,GAAG,CAAC,CAAEC,KAAK,CAALA,KAAM,CAAC,CAAC,CAAC,8BAEfD,GAAG,CAAC,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAC,CAAC,sDAE5B,GAAE,GAAG,CAAC,CAEPiB,UAAU,sFAAE,qOACkBC,QAAO,CAACC,GAAG,CAAC,CACtCzB,KAAK,CAACe,GAAG,oDAAoD,CAC7Df,KAAK,CAACe,GAAG,+EAER,CACF,CAAC,mGALKC,GAAG,wBAAEU,MAAM,wBAOZC,QAAQ,CAAGD,MAAM,CAACT,IAAI,CAACW,OAAO,CAACC,GAAG,CAElCxB,KAAK,CAAGW,GAAG,CAACC,IAAI,CAACZ,KAAK,CAACa,GAAG,CAAC,SAACb,KAAK,CAAK,CAC1C,MAAO,CACLc,IAAI,CAAEd,KAAK,CAACyB,IAAI,CAACX,IAAI,CACrBC,KAAK,CAAEf,KAAK,CAACyB,IAAI,CAACT,KAAK,CACvBC,EAAE,CAAEjB,KAAK,CAACyB,IAAI,CAACR,EAAE,CACjBS,QAAQ,CAAE1B,KAAK,CAACyB,IAAI,CAACE,SAAS,CAACC,OAAO,CAAC,EAAE,CAAC,CAC1CC,QAAQ,CAAE,CAAC7B,KAAK,CAACyB,IAAI,CAACE,SAAS,CAAGL,QAAQ,EAAEM,OAAO,CAAC,EAAE,CACxD,CAAC,CACH,CAAC,CAAC,CAEF7B,GAAG,CAAC,CAAEC,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAAED,KAAM,CAAC,CAAC,CAAC,uDACjC,wFACH,CAAC,EAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}