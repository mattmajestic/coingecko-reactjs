{"ast":null,"code":"import _regeneratorRuntime from\"/workspaces/coingecko-reactjs/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _slicedToArray from\"/workspaces/coingecko-reactjs/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/workspaces/coingecko-reactjs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from\"axios\";import{create}from\"zustand\";export var showStore=create(function(set){return{graphData:[],fetchData:function(){var _fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(id){var _yield$Promise$all,_yield$Promise$all2,graphRes,dataRes,graphData,_dataRes$data,name,symbol,image,market_data,market_Cap_rank,imageLarge,high24h,low24h,circulatingSupply,currentPrice,priceChangePercentage;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all([axios.get(\"https://api.coingecko.com/api/v3/coins/\".concat(id,\"/market_chart?vs_currency=usd&days=121\")),axios.get(\"https://api.coingecko.com/api/v3/coins/\".concat(id,\"?localization=false&market_data=true\"))]);case 2:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);graphRes=_yield$Promise$all2[0];dataRes=_yield$Promise$all2[1];graphData=graphRes.data.prices.map(function(price){var _price=_slicedToArray(price,2),timestamp=_price[0],p=_price[1];var date=new Date(timestamp).toLocaleDateString(\"en-us\");return{Date:date,Price:p};});console.log(dataRes.data);_dataRes$data=dataRes.data,name=_dataRes$data.name,symbol=_dataRes$data.symbol,image=_dataRes$data.image,market_data=_dataRes$data.market_data,market_Cap_rank=_dataRes$data.market_Cap_rank;imageLarge=image.large;high24h=market_data.high_24h.usd;low24h=market_data.low_24h.usd;circulatingSupply=market_data.circulating_supply;currentPrice=market_data.current_price.usd;priceChangePercentage=market_data.price_change_percentage_1y.toFixed(2);set({graphData:graphData,name:name,symbol:symbol,imageLarge:imageLarge,high24h:high24h,market_Cap_rank:market_Cap_rank,low24h:low24h,circulatingSupply:circulatingSupply,currentPrice:currentPrice,priceChangePercentage:priceChangePercentage});case 16:case\"end\":return _context.stop();}},_callee);}));function fetchData(_x){return _fetchData.apply(this,arguments);}return fetchData;}()};});export default showStore;","map":{"version":3,"names":["axios","create","showStore","set","graphData","fetchData","id","Promise","all","get","graphRes","dataRes","data","prices","map","price","timestamp","p","date","Date","toLocaleDateString","Price","console","log","name","symbol","image","market_data","market_Cap_rank","imageLarge","large","high24h","high_24h","usd","low24h","low_24h","circulatingSupply","circulating_supply","currentPrice","current_price","priceChangePercentage","price_change_percentage_1y","toFixed"],"sources":["/workspaces/coingecko-reactjs/src/Store/showStore.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { create } from \"zustand\";\r\n\r\nexport const showStore = create((set) => ({\r\n  graphData: [],\r\n\r\n  fetchData: async (id) => {\r\n    const [graphRes, dataRes] = await Promise.all([\r\n      axios.get(\r\n        `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=usd&days=121`\r\n      ),\r\n      axios.get(\r\n        `https://api.coingecko.com/api/v3/coins/${id}?localization=false&market_data=true`\r\n      ),\r\n    ]);\r\n\r\n    const graphData = graphRes.data.prices.map((price) => {\r\n      const [timestamp, p] = price;\r\n      const date = new Date(timestamp).toLocaleDateString(\"en-us\");\r\n      return {\r\n        Date: date,\r\n        Price: p,\r\n      };\r\n    });\r\n\r\n    console.log(dataRes.data);\r\n    const { name, symbol, image, market_data, market_Cap_rank } = dataRes.data;\r\n    const imageLarge = image.large;\r\n    const high24h = market_data.high_24h.usd;\r\n    const low24h = market_data.low_24h.usd;\r\n    const circulatingSupply = market_data.circulating_supply;\r\n    const currentPrice = market_data.current_price.usd;\r\n    const priceChangePercentage =\r\n      market_data.price_change_percentage_1y.toFixed(2);\r\n\r\n    set({\r\n      graphData,\r\n      name,\r\n      symbol,\r\n      imageLarge,\r\n      high24h,\r\n      market_Cap_rank,\r\n      low24h,\r\n      circulatingSupply,\r\n      currentPrice,\r\n      priceChangePercentage,\r\n    });\r\n  },\r\n}));\r\n\r\nexport default showStore;\r\n"],"mappings":"yWAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,SAAS,CAEhC,MAAO,IAAMC,UAAS,CAAGD,MAAM,CAAC,SAACE,GAAG,QAAM,CACxCC,SAAS,CAAE,EAAE,CAEbC,SAAS,qFAAE,iBAAOC,EAAE,0VACgBC,QAAO,CAACC,GAAG,CAAC,CAC5CR,KAAK,CAACS,GAAG,kDACmCH,EAAE,2CAC7C,CACDN,KAAK,CAACS,GAAG,kDACmCH,EAAE,yCAC7C,CACF,CAAC,kGAPKI,QAAQ,wBAAEC,OAAO,wBASlBP,SAAS,CAAGM,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,SAACC,KAAK,CAAK,CACpD,0BAAuBA,KAAK,IAArBC,SAAS,WAAEC,CAAC,WACnB,GAAMC,KAAI,CAAG,GAAIC,KAAI,CAACH,SAAS,CAAC,CAACI,kBAAkB,CAAC,OAAO,CAAC,CAC5D,MAAO,CACLD,IAAI,CAAED,IAAI,CACVG,KAAK,CAAEJ,CACT,CAAC,CACH,CAAC,CAAC,CAEFK,OAAO,CAACC,GAAG,CAACZ,OAAO,CAACC,IAAI,CAAC,CAAC,cACoCD,OAAO,CAACC,IAAI,CAAlEY,IAAI,eAAJA,IAAI,CAAEC,MAAM,eAANA,MAAM,CAAEC,KAAK,eAALA,KAAK,CAAEC,WAAW,eAAXA,WAAW,CAAEC,eAAe,eAAfA,eAAe,CACnDC,UAAU,CAAGH,KAAK,CAACI,KAAK,CACxBC,OAAO,CAAGJ,WAAW,CAACK,QAAQ,CAACC,GAAG,CAClCC,MAAM,CAAGP,WAAW,CAACQ,OAAO,CAACF,GAAG,CAChCG,iBAAiB,CAAGT,WAAW,CAACU,kBAAkB,CAClDC,YAAY,CAAGX,WAAW,CAACY,aAAa,CAACN,GAAG,CAC5CO,qBAAqB,CACzBb,WAAW,CAACc,0BAA0B,CAACC,OAAO,CAAC,CAAC,CAAC,CAEnDvC,GAAG,CAAC,CACFC,SAAS,CAATA,SAAS,CACToB,IAAI,CAAJA,IAAI,CACJC,MAAM,CAANA,MAAM,CACNI,UAAU,CAAVA,UAAU,CACVE,OAAO,CAAPA,OAAO,CACPH,eAAe,CAAfA,eAAe,CACfM,MAAM,CAANA,MAAM,CACNE,iBAAiB,CAAjBA,iBAAiB,CACjBE,YAAY,CAAZA,YAAY,CACZE,qBAAqB,CAArBA,qBACF,CAAC,CAAC,CAAC,sDACJ,uFACH,CAAC,EAAC,CAAC,CAEH,cAAetC,UAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}